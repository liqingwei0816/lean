spring:
  datasource:
    quartz:
      url: jdbc:mysql://10.3.1.16:3306/quartz?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
      username: root
      password: hqh1@MDN@develop
    druid:
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
      filters: stat,wall,slf4j
  quartz:
    job-store-type: jdbc
    overwrite-existing-jobs: true
    jdbc:
      #第一次启动时创建数据表 之后取消
      initialize-schema: never
    properties:
      org:
        quartz:
          threadPool:
            # todo 日志拦截器 将job日志放入指定地方
            threadNamePrefix: jobThread
          scheduler:
            instanceId: AUTO
          jobStore:
           # class: org.quartz.impl.jdbcjobstore.JobStoreTX #持久化配置
           # driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate #我们仅为数据库制作了特定于数据库的代理
            useProperties: true #以指示JDBCJobStore将JobDataMaps中的所有值都作为字符串，因此可以作为名称 - 值对存储而不是在BLOB列中以其序列化形式存储更多复杂的对象。从长远来看，这是更安全的，因为您避免了将非String类序列化为BLOB的类版本问题。
           # misfireThreshold: 60000 #在被认为“失火”之前，调度程序将“容忍”一个Triggers将其下一个启动时间通过的毫秒数。默认值（如果您在配置中未输入此属性）为60000（60秒）。
           # clusterCheckinInterval: 5000 #设置此实例“检入”*与群集的其他实例的频率（以毫秒为单位）。影响检测失败实例的速度。
            isClustered: true #打开群集功能
    auto-startup: true
    wait-for-jobs-to-complete-on-shutdown: true

